{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 練習時間\n",
    "#### 請寫一個函式用來計算 Mean Square Error\n",
    "$ MSE = \\frac{1}{n}\\sum_{i=1}^{n}{(Y_i - \\hat{Y}_i)^2} $\n",
    "\n",
    "### Hint: [如何取平方](https://googoodesign.gitbooks.io/-ezpython/unit-1.html)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "第一大題\n",
    "Q1. 你選的這組資料為何重要\n",
    "A1. 呼吸乃人類基本權利之一，可由此資料得知何處適合旅遊、居住，或做好前往該地的應對措施\n",
    "\n",
    "Q2. 資料從何而來 (tips: 譬如提供者是誰、以什麼方式蒐集)\n",
    "A2. 資料來自kaggle\n",
    "    提供者為為OpenAQ，根據描述，是一個提供全球性開放資料的組織，讓以前不可能的數據科學分析得以實現\n",
    "    來源網址： https://www.kaggle.com/open-aq/openaq\n",
    "\n",
    "Q3. 蒐集而來的資料型態為何\n",
    "A3. 此為時間序列資料，是以數值資料為主的資料\n",
    "\n",
    "Q4. 這組資料想解決的問題如何評估\n",
    "A4. 可將此資料以視覺化的方式繪製成溫度地圖，讓觀圖者知道空氣汙染密集的區域\n",
    "    藉此達到宜居區域的初步參考，假以配合健康指數、產業發展等資料一併分析，達到對該國家懲處、規勸的參考\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid character in identifier (<ipython-input-1-08d1aa002c39>, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-1-08d1aa002c39>\"\u001b[1;36m, line \u001b[1;32m2\u001b[0m\n\u001b[1;33m    Q1. 核心問題為何 (tips：如何定義 「提升業績 & 你的假設」)\u001b[0m\n\u001b[1;37m                        ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid character in identifier\n"
     ]
    }
   ],
   "source": [
    "第二大題\n",
    "Q1. 核心問題為何 (tips：如何定義 「提升業績 & 你的假設」)\n",
    "A1. 我認為核心問題為維持顧客忠誠度，若使客戶對於此服務有忠誠度，假設與同業價格相近，擁有顧客忠誠度的企業會較具有優勢\n",
    "\n",
    "Q2. 資料從何而來 (tips：哪些資料可能會對你想問的問題產生影響 & 資料如何蒐集)\n",
    "A2. 1. 資料可以從車輛的行經路線(利用GPS)，觀察駕駛員是否有故意繞路之嫌疑，亦可觀察某些時段是否有更適當之道路可供行駛\n",
    "    2. 在車輛上安裝感測器，觀察駕駛員是否有危險駕駛之虞\n",
    "    3. 跳表資料，觀察某些時段是否應加價或減價，作為定價策略之參考\n",
    "    4. 罰單資料，做為違規懲處之依據\n",
    "\n",
    "Q3. 蒐集而來的資料型態為何\n",
    "A3. 根據A2之答案：\n",
    "    A2-1. 為時間戳記與連續GPS座標資料\n",
    "    A2-2. 為時間序列、時速、煞車次數...等資料\n",
    "    A2-3. 為時間序列及車資資料\n",
    "    A2-4. 時間戳記、歸屬司機員、金額、違規事項\n",
    "\n",
    "Q4. 你要回答的問題，其如何評估 (tips：你的假設如何驗證)\n",
    "A4. 根據上述資料，以GPS座標資料為主，分析在某些路段的煞車次數、時速、所需時間，做統計分析，\n",
    "    例如司機員超過一個標準差的開車速度，則列入觀察名單，超過兩個則列為約談名單；\n",
    "    違規次數是否有超過一個標準差；\n",
    "    是否相似路段與距離收費超一宜個標準差；\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mean_squared_error(y, yp):\n",
    "    sum_squ = 0\n",
    "    result =  sum((y-yp)**2) / len(y)\n",
    "    return result\n",
    "\n",
    "def mean_absolute_error(y, yp):\n",
    "    \"\"\"\n",
    "    計算 MAE\n",
    "    Args:\n",
    "        - y: 實際值\n",
    "        - yp: 預測值\n",
    "    Return:\n",
    "        - mae: MAE\n",
    "    \"\"\"\n",
    "    mae = MAE = sum(abs(y - yp)) / len(y)\n",
    "    return mae"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "w = 3\n",
    "b = 0.5\n",
    "\n",
    "x_lin = np.linspace(0, 100, 101)\n",
    "\n",
    "y = (x_lin + np.random.randn(101) * 5) * w + b\n",
    "\n",
    "plt.plot(x_lin, y, 'b.', label = 'data points')\n",
    "plt.title(\"Assume we have data points\")\n",
    "plt.legend(loc = 2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_hat = x_lin * w + b\n",
    "plt.plot(x_lin, y, 'b.', label = 'data')\n",
    "plt.plot(x_lin, y_hat, 'r-', label = 'prediction')\n",
    "plt.title(\"Assume we have data points (And the prediction)\")\n",
    "plt.legend(loc = 2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Mean squared error is 217.917\n",
      "The Mean absolute error is 11.962\n"
     ]
    }
   ],
   "source": [
    "# 執行 Function, 確認有沒有正常執行\n",
    "MSE = mean_squared_error(y, y_hat)\n",
    "MAE = mean_absolute_error(y, y_hat)\n",
    "print(\"The Mean squared error is %.3f\" % (MSE))\n",
    "print(\"The Mean absolute error is %.3f\" % (MAE))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
